Ext.data.JsonP.Ti_Worker_Worker({"tagname":"class","name":"Ti.Worker.Worker","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-Ti.Worker.Worker","members":{"cfg":[],"property":[],"method":[{"name":"postMessage","tagname":"method","owner":"Ti.Worker.Worker","meta":{},"id":"method-postMessage"},{"name":"start","tagname":"method","owner":"Ti.Worker.Worker","meta":{},"id":"method-start"},{"name":"terminate","tagname":"method","owner":"Ti.Worker.Worker","meta":{},"id":"method-terminate"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":1,"files":[{"filename":"Ti.Worker.Worker.js","href":null},{"filename":"Ti.Worker.Worker.js","href":null}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='doc-contents'><p>An object representing a TideSDK Worker.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-postMessage' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Worker.Worker'>Ti.Worker.Worker</span><br/></div><a href='#!/api/Ti.Worker.Worker-method-postMessage' class='name expandable'>postMessage</a>( <span class='pre'>data</span> ) : String</div><div class='description'><div class='short'>\"Post a message (async) into the worker thread's queue to be handled by onmessage\" ...</div><div class='long'><p>\"Post a message (async) into the worker thread's queue to be handled by onmessage\"</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : any<div class='sub-desc'><p>Any JSON serializable type to pass to the child.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-start' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Worker.Worker'>Ti.Worker.Worker</span><br/></div><a href='#!/api/Ti.Worker.Worker-method-start' class='name expandable'>start</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Start the worker thread ...</div><div class='long'><p>Start the worker thread</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-terminate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Worker.Worker'>Ti.Worker.Worker</span><br/></div><a href='#!/api/Ti.Worker.Worker-method-terminate' class='name expandable'>terminate</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Terminate the worker thread. ...</div><div class='long'><p>Terminate the worker thread. The thread can be restarted with Worker.start()</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>"});