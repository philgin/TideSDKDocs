Ext.data.JsonP.Ti_Media_Sound({"tagname":"class","name":"Ti.Media.Sound","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-Ti.Media.Sound","members":{"cfg":[],"property":[],"method":[{"name":"getVolume","tagname":"method","owner":"Ti.Media.Sound","meta":{},"id":"method-getVolume"},{"name":"isLooping","tagname":"method","owner":"Ti.Media.Sound","meta":{},"id":"method-isLooping"},{"name":"isPaused","tagname":"method","owner":"Ti.Media.Sound","meta":{},"id":"method-isPaused"},{"name":"isPlaying","tagname":"method","owner":"Ti.Media.Sound","meta":{},"id":"method-isPlaying"},{"name":"onComplete","tagname":"method","owner":"Ti.Media.Sound","meta":{},"id":"method-onComplete"},{"name":"pause","tagname":"method","owner":"Ti.Media.Sound","meta":{},"id":"method-pause"},{"name":"play","tagname":"method","owner":"Ti.Media.Sound","meta":{},"id":"method-play"},{"name":"reload","tagname":"method","owner":"Ti.Media.Sound","meta":{},"id":"method-reload"},{"name":"setLooping","tagname":"method","owner":"Ti.Media.Sound","meta":{},"id":"method-setLooping"},{"name":"setVolume","tagname":"method","owner":"Ti.Media.Sound","meta":{},"id":"method-setVolume"},{"name":"stop","tagname":"method","owner":"Ti.Media.Sound","meta":{},"id":"method-stop"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":1,"files":[{"filename":"Ti.Media.Sound.js","href":null},{"filename":"Ti.Media.Sound.js","href":null}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='doc-contents'><p>An object allowing for loading simple sounds and simple types of playback.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getVolume' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Media.Sound'>Ti.Media.Sound</span><br/></div><a href='#!/api/Ti.Media.Sound-method-getVolume' class='name expandable'>getVolume</a>( <span class='pre'></span> ) : Number</div><div class='description'><div class='short'>Return the current volume of this Media.Sound object. ...</div><div class='long'><p>Return the current volume of this Media.Sound object. Volume\nvalues will be between 0.0 and 1.0.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isLooping' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Media.Sound'>Ti.Media.Sound</span><br/></div><a href='#!/api/Ti.Media.Sound-method-isLooping' class='name expandable'>isLooping</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Return true if this Media.Sound is set to loop and false otherwise. ...</div><div class='long'><p>Return true if this Media.Sound is set to loop and false otherwise.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isPaused' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Media.Sound'>Ti.Media.Sound</span><br/></div><a href='#!/api/Ti.Media.Sound-method-isPaused' class='name expandable'>isPaused</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Return true if this Media.Sound is paused and false otherwise. ...</div><div class='long'><p>Return true if this Media.Sound is paused and false otherwise.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isPlaying' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Media.Sound'>Ti.Media.Sound</span><br/></div><a href='#!/api/Ti.Media.Sound-method-isPlaying' class='name expandable'>isPlaying</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Return true if this Media.Sound is playing and false otherwise. ...</div><div class='long'><p>Return true if this Media.Sound is playing and false otherwise.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onComplete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Media.Sound'>Ti.Media.Sound</span><br/></div><a href='#!/api/Ti.Media.Sound-method-onComplete' class='name expandable'>onComplete</a>( <span class='pre'>callback</span> ) : void</div><div class='description'><div class='short'>Set a callback to invoke once this sound is finished playing. ...</div><div class='long'><p>Set a callback to invoke once this sound is finished playing. If\nthe sound is looping, this callback will be invoked after each\niteration of the loop. Passing null as the argument to this function\nwill unset the onComplete callback.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Function|null<div class='sub-desc'><p>The new callback function or null to unset it.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-pause' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Media.Sound'>Ti.Media.Sound</span><br/></div><a href='#!/api/Ti.Media.Sound-method-pause' class='name expandable'>pause</a>( <span class='pre'></span> ) : void</div><div class='description'><div class='short'>Pause a currently playing sound. ...</div><div class='long'><p>Pause a currently playing sound.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-play' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Media.Sound'>Ti.Media.Sound</span><br/></div><a href='#!/api/Ti.Media.Sound-method-play' class='name expandable'>play</a>( <span class='pre'></span> ) : void</div><div class='description'><div class='short'>Play a sound object. ...</div><div class='long'><p>Play a sound object. If the sound is paused, it will resume from the current location.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-reload' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Media.Sound'>Ti.Media.Sound</span><br/></div><a href='#!/api/Ti.Media.Sound-method-reload' class='name expandable'>reload</a>( <span class='pre'></span> ) : void</div><div class='description'><div class='short'>Reload this sound from the original URL or path. ...</div><div class='long'><p>Reload this sound from the original URL or path.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setLooping' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Media.Sound'>Ti.Media.Sound</span><br/></div><a href='#!/api/Ti.Media.Sound-method-setLooping' class='name expandable'>setLooping</a>( <span class='pre'>looping</span> ) : void</div><div class='description'><div class='short'>Set whether or not this sound should loop. ...</div><div class='long'><p>Set whether or not this sound should loop.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>looping</span> : Boolean<div class='sub-desc'><p>True if the sound should loop, false otherwise.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Media.Sound'>Ti.Media.Sound</span><br/></div><a href='#!/api/Ti.Media.Sound-method-setVolume' class='name expandable'>setVolume</a>( <span class='pre'>volume</span> ) : void</div><div class='description'><div class='short'>Set the volume of this sound. ...</div><div class='long'><p>Set the volume of this sound. Sound volumes should be between\n0.0 and 1.0. Values outside of this range will be clipped to\n0.0 or 1.0.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>volume</span> : Number<div class='sub-desc'><p>The new volume value of the sound between 0.0 to 1.0</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-stop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Media.Sound'>Ti.Media.Sound</span><br/></div><a href='#!/api/Ti.Media.Sound-method-stop' class='name expandable'>stop</a>( <span class='pre'></span> ) : void</div><div class='description'><div class='short'>Stop a currently playing sound. ...</div><div class='long'><p>Stop a currently playing sound.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>"});