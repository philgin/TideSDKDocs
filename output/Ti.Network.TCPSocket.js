Ext.data.JsonP.Ti_Network_TCPSocket({"tagname":"class","name":"Ti.Network.TCPSocket","extends":null,"mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-Ti.Network.TCPSocket","members":{"cfg":[],"property":[],"method":[{"name":"close","tagname":"method","owner":"Ti.Network.TCPSocket","meta":{},"id":"method-close"},{"name":"connect","tagname":"method","owner":"Ti.Network.TCPSocket","meta":{},"id":"method-connect"},{"name":"isClosed","tagname":"method","owner":"Ti.Network.TCPSocket","meta":{},"id":"method-isClosed"},{"name":"onError","tagname":"method","owner":"Ti.Network.TCPSocket","meta":{},"id":"method-onError"},{"name":"onRead","tagname":"method","owner":"Ti.Network.TCPSocket","meta":{},"id":"method-onRead"},{"name":"onReadComplete","tagname":"method","owner":"Ti.Network.TCPSocket","meta":{},"id":"method-onReadComplete"},{"name":"onTimeout","tagname":"method","owner":"Ti.Network.TCPSocket","meta":{},"id":"method-onTimeout"},{"name":"onWrite","tagname":"method","owner":"Ti.Network.TCPSocket","meta":{},"id":"method-onWrite"},{"name":"write","tagname":"method","owner":"Ti.Network.TCPSocket","meta":{},"id":"method-write"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":1,"files":[{"filename":"Ti.Network.TCPSocket.js","href":null},{"filename":"Ti.Network.TCPSocket.js","href":null}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='doc-contents'><p>An object representing a TCP client socket connection.\nA simple implementation of connecting to a host has been shown below.</p>\n\n<pre><code>//Create the connection.\nvar socket = <a href=\"#!/api/Ti.Network-method-createTCPSocket\" rel=\"Ti.Network-method-createTCPSocket\" class=\"docClass\">Ti.Network.createTCPSocket</a>(\"127.0.0.1\", 8080);\nsocket.connect();\n\n//The onReadComplete function below ensures that the\n//read operation is completed and all bytes have been received.\n\nsocket.onReadComplete(function(data) {\n       alert(data);\n   });\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Network.TCPSocket'>Ti.Network.TCPSocket</span><br/></div><a href='#!/api/Ti.Network.TCPSocket-method-close' class='name expandable'>close</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Close this Network.TCPSocket connection. ...</div><div class='long'><p>Close this Network.TCPSocket connection. If there is no open\nconnection then do nothing. Return true if the connection was\nclosed and false otherwise.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-connect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Network.TCPSocket'>Ti.Network.TCPSocket</span><br/></div><a href='#!/api/Ti.Network.TCPSocket-method-connect' class='name expandable'>connect</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Connect the Socket object to the host specified during creation. ...</div><div class='long'><p>Connect the Socket object to the host specified during creation. The connection will be made asynchronously. Use onError to detect failures.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isClosed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Network.TCPSocket'>Ti.Network.TCPSocket</span><br/></div><a href='#!/api/Ti.Network.TCPSocket-method-isClosed' class='name expandable'>isClosed</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Check whether the Socket is closed. ...</div><div class='long'><p>Check whether the Socket is closed.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Network.TCPSocket'>Ti.Network.TCPSocket</span><br/></div><a href='#!/api/Ti.Network.TCPSocket-method-onError' class='name expandable'>onError</a>( <span class='pre'>onError</span> ) : String</div><div class='description'><div class='short'>Set the callback that will be fired when the Socket encounters an error. ...</div><div class='long'><p>Set the callback that will be fired when the Socket encounters an error.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>onError</span> : Function<div class='sub-desc'><p>Function to be called when an error happens.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onRead' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Network.TCPSocket'>Ti.Network.TCPSocket</span><br/></div><a href='#!/api/Ti.Network.TCPSocket-method-onRead' class='name expandable'>onRead</a>( <span class='pre'>onRead</span> ) : String</div><div class='description'><div class='short'>Set a callback that will be fired when data is received on the Socket. ...</div><div class='long'><p>Set a callback that will be fired when data is received on the Socket.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>onRead</span> : Function<div class='sub-desc'><p>Function to be called when data is received.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onReadComplete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Network.TCPSocket'>Ti.Network.TCPSocket</span><br/></div><a href='#!/api/Ti.Network.TCPSocket-method-onReadComplete' class='name expandable'>onReadComplete</a>( <span class='pre'>onReadComplete</span> ) : String</div><div class='description'><div class='short'>Set the callback function that will be fired when a read finishes. ...</div><div class='long'><p>Set the callback function that will be fired when a read finishes. A read is considered finished if some bytes have been read and a subsequent call to read returns zero bytes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>onReadComplete</span> : Function<div class='sub-desc'><p>Function be called when a read completes.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onTimeout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Network.TCPSocket'>Ti.Network.TCPSocket</span><br/></div><a href='#!/api/Ti.Network.TCPSocket-method-onTimeout' class='name expandable'>onTimeout</a>( <span class='pre'>onTimeout</span> ) : String</div><div class='description'><div class='short'>Set the callback that will be fired when an operation times out on the Socket. ...</div><div class='long'><p>Set the callback that will be fired when an operation times out on the Socket.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>onTimeout</span> : Function<div class='sub-desc'><p>Function to be called when an operation times out.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onWrite' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Network.TCPSocket'>Ti.Network.TCPSocket</span><br/></div><a href='#!/api/Ti.Network.TCPSocket-method-onWrite' class='name expandable'>onWrite</a>( <span class='pre'>onWrite</span> ) : String</div><div class='description'><div class='short'>Set a callback that will be fired when data is written on the Socket. ...</div><div class='long'><p>Set a callback that will be fired when data is written on the Socket.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>onWrite</span> : Function<div class='sub-desc'><p>Function to be called when data is written.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-write' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ti.Network.TCPSocket'>Ti.Network.TCPSocket</span><br/></div><a href='#!/api/Ti.Network.TCPSocket-method-write' class='name expandable'>write</a>( <span class='pre'>data</span> ) : Boolean</div><div class='description'><div class='short'>\"Write data to the Socket's connection, if open.\" ...</div><div class='long'><p>\"Write data to the Socket's connection, if open.\"</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : String<div class='sub-desc'><p>The data to write to the connection.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>"});